package in.cozynest.cozyapis.model;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlRootElement;

//@NamedQueries({
//		@NamedQuery(name = "Subscription.findByStatus", query = "select s from Subscription s where s.status=:status"),
//		@NamedQuery(name = "Subscription.findByStartDate", query = "select s from Subscription s where s.startDate=:startDate"),
//		@NamedQuery(name = "Subscription.findByEndDate", query = "select s from Subscription s where s.endDate=:endDate"),
//		@NamedQuery(name = "Subscription.findByOrderId", query = "select s from Subscription s Join s.order o where o.id=:orderId"),
//		@NamedQuery(name = "Subscription.findByUserId", query = "select s from Subscription s Join s.order o Join o.user c where c.id=:userId"),
//		@NamedQuery(name = "Subscription.findByGeneratedUserId", query = "select s from Subscription s Join s.order o Join o.user c where c.generatedUserId=:generatedUserId"),
//		@NamedQuery(name = "Subscription.findByPhone", query = "select s from Subscription s Join s.order o Join o.user c where c.phone=:phone"),
//		@NamedQuery(name = "Subscription.findTodaysDeliveryByCurrentDateAndCurrentShift", query = "select s from Subscription s Join s.order o Join o.user c where s.status='ACTIVE' and (s.subscriptionType=:shift or s.subscriptionType='LUNCHDINNER') and s not in (select csd.subscription.id from CancelledSubscriptionDate csd where csd.cancelDate=:date and csd.cancelShift=:cancelShift)"),
//		@NamedQuery(name = "Subscription.findUsersByEndDateAndEndShift", query = "select c from Subscription s Join s.order o Join o.user c where s.endDate=:endDate and s.endShift=:endShift") })

@Entity
@Table(name = "subscription")
@XmlRootElement
public class Subscription implements java.io.Serializable,IAuthorization {

	private static final long serialVersionUID = 7036106481573535547L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;

	@Column(name = "ordered_subscription", nullable = false)
	private OrderedSubscription orderedSubscription;

	public Subscription() {
		super();
		// TODO Auto-generated constructor stub
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public OrderedSubscription getOrderedSubscription() {
		return orderedSubscription;
	}

	public void setOrderedSubscription(OrderedSubscription orderedSubscription) {
		this.orderedSubscription = orderedSubscription;
	}
	
	public String getGeneratedUserId() {
		return orderedSubscription.getOrder().getUser().getGeneratedUserId();
	}

	@Override
	public String getUserTypeString() {
		return orderedSubscription.getOrder().getUser().getUserTypeString();
	}

}